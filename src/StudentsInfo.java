import java.util.*;

public class StudentsInfo{

  static
  {
    System.out.println("Student Front Office Information System");
    System.out.println("=============================================================");
    System.out.println("1). ADD");
    System.out.println("2). DELETE");
    System.out.println("3). MODIFY");
    System.out.println("4). READ");
    System.out.println("5). EXIT");
    System.out.println("=============================================================");
  }

  public int studentNumber;
  public String studentName;
  public String studentSection;
  private ParentsInfo parent;
  private BillingInfo bill;

  public static ArrayList<StudentsInfo> StudentsInfo = new ArrayList<StudentsInfo>();

  public StudentsInfo(int studentNumber, String studentName, String studentSection, 
      ParentsInfo parent, BillingInfo bill) {
    super();
    this.studentNumber = studentNumber;    
    this.studentName = studentName;
    this.studentSection = studentSection;   
    this.parent = parent;
    this.bill = bill;
  }


  public StudentsInfo(int studentNumber, String studentName, String studentSection, String parentName,
      String parentOccupation, int parentPhone, String billNumber,  double termAmount) {
    this.studentNumber = studentNumber;    
    this.studentName = studentName;
    this.studentSection = studentSection;
    parent.setParentName(parentName);
    parent.setParentOccupation(parentOccupation);
    parent.setParentPhone(parentPhone);
    bill.setBillNumber(billNumber);
    bill.setTermAmount(termAmount);    
  }


  public StudentsInfo() {
    super();
    // AutoGenerated.
  }

  /**
   * @return the studentNumber
   */
  public int getStudentNumber() {
    return studentNumber;}

  /**
   * @param studentNumber the studentNumber to set
   */
  public void setStudentNumber(int studentNumber) {
    this.studentNumber = studentNumber;}

  /**
   * @return the studentName
   */
  public String getStudentName() {
    return studentName;}

  /**
   * @param studentName the studentName to set
   */
  public void setStudentName(String studentName) {
    this.studentName = studentName;}

  /**
   * @return the studentSection
   */
  public String getStudentSection() {
    return studentSection;}

  /**
   * @param studentSection the studentSection to set
   */
  public void setStudentSection(String studentSection) {
    this.studentSection = studentSection;}

  /**
   * @return the parent
   */
  public ParentsInfo getParent() {
    return parent;}

  /**
   * @param parent the parent to set
   */
  public void setParent(ParentsInfo parent) {
    this.parent = parent;}

  /**
   * @return the bill
   */
  public BillingInfo getBill() {
    return bill;}

  /**
   * @param bill the bill to set
   */
  public void setBill(BillingInfo bill) {
    this.bill = bill;}

  // Format to Print Student INFO.
  public String toStringstudentsInfo() {
    return " " +studentNumber +"      "  +studentName +"           " +studentSection +"            "
        +parent.getParentName()+"           " +parent.getParentOccupation() +"            " +parent.getParentPhone() +"         " 
        +bill.getBillNumber()+"         "  +bill.getTermAmount(); 
  }

  //Get all StudentsInfo information based on Class Section.
  public static void getstudentsInfoFromSection(String section) {
    ListIterator<StudentsInfo> lt = StudentsInfo.listIterator();
    while(lt.hasNext()) {
      StudentsInfo s = lt.next();
      if (s.getStudentSection() == section) {
        System.out.printf("Getting all Student with Section %s \n", section);
      }
    }
  }

  // Add single Student information at a time.
  public void addNewStudentsInfo(int studentNumber, String studentName, String studentSection,
      ParentsInfo parent,BillingInfo bill) {
    StudentsInfo student = new StudentsInfo(studentNumber,studentName,studentSection,parent,bill);
    StudentsInfo.add(student);
  }

  // Delete Any Student Information.
  public static void deleteStudent(int sno) {
    ListIterator<StudentsInfo> lt = StudentsInfo.listIterator();
    int pos = 1;
    while(lt.hasNext()) {
      if (pos < StudentsInfo.size()) {            
        StudentsInfo s = lt.next();
        if (s.getStudentNumber() == sno) {
          StudentsInfo.remove(s);
          System.out.printf("Student '%s' Deleted Successfully.\n", sno);
        }  
      }
      else {
        System.out.println("Not Allowed to Students info empty.");
        break;
      }
    }
  }  

  // Delete all StudentsInfo Information.
  public static void deleteAllStudens() {
    StudentsInfo.removeAll(StudentsInfo);
  }
  // Get any student information.
  public static void getStudent(int sno) {
    ListIterator<StudentsInfo> lt = StudentsInfo.listIterator();
    StudentsInfo s = lt.next();
    while(lt.hasNext()) {
      if (s.getStudentNumber() == sno) {
        System.out.printf("Student Get NNN ONLY '%s' \n", sno);
        System.out.println(s);  
      }
    }
  }

  // Get All student information.
  public void printstudentsInfoAll() {
    ListIterator<StudentsInfo> lt = StudentsInfo.listIterator();
    while(lt.hasNext()) {
      StudentsInfo s = lt.next();
      System.out.println(s.toStringstudentsInfo());
    }
  }


  public static void main(String[] args) {
    // adding 1st student number using details and ParentsInfo & BillingInfo objects with setMethods.
    StudentsInfo s1 = new StudentsInfo();
    s1.setStudentNumber(1);
    s1.setStudentName("S1");
    s1.setStudentSection("A");   
    ParentsInfo p1 = new ParentsInfo();
    p1.setParentName("P1");
    p1.setParentOccupation("O1");
    p1.setParentPhone(11);
    s1.setParent(p1);
    BillingInfo b1 = new BillingInfo();
    b1.setBillNumber("B1");
    b1.setTermtermAmount(100);
    s1.setBill(b1);
    StudentsInfo.add(s1);

    // Adding student info using addNewStudentsInfo method by passing Objects as variables.
    ParentsInfo p2 = new ParentsInfo();
    p2.setParentName("p2");
    p2.setParentOccupation("O2");
    p2.setParentPhone(22);
    BillingInfo b2 = new BillingInfo();
    b2.setBillNumber("B1");
    b2.setTermAmount(200);
    StudentsInfo student1 = new StudentsInfo();
    student1.addNewStudentsInfo(2, "S2", "B", p2, b2);
    System.out.println("S.NO  |   Name  |   Section |  Parent Name |  Occupation | Phone | B.NO | Term Amount");
    student1.printstudentsInfoAll();

        System.out.println("Choose One of Option above....... ");
    
        Scanner inputKey = new Scanner(System.in);
        int choice = 0;
    
        do {
          choice = inputKey.nextInt();
          switch(choice) {
            case 1 : 
              System.out.println("Please Enter Student Info");
              System.out.print("Student Number = ");
              int no_key = inputKey.nextInt();
              System.out.print("Student Name = ");
              String name_key = inputKey.next();
              System.out.print("Student Class Section = "); 
              String section_key = inputKey.next();
              System.out.print("Parent Name = "); 
              String pname_key = inputKey.next();
              System.out.print("Parent Occupation = "); 
              String poccupation_key = inputKey.next();
              System.out.print("Parent Phone = ");    
              int pphone_key = inputKey.nextInt();
              System.out.print("Bill Number = ");
              String bbill_key1 = inputKey.next();          
              System.out.print("Term Fee:");
              double bamount_key = inputKey.nextDouble();
              
              p1.setParentName(pname_key);
              p1.setParentOccupation(poccupation_key);
              p1.setParentPhone(pphone_key);
              b1.setBillNumber(bbill_key1);
              b1.setTermAmount(bamount_key);
              
              student1.addNewStudentsInfo(no_key,name_key,section_key,p1, b1);
              student1.printstudentsInfoAll();
              
              System.out.println("S.NO  |   Name  |   Section |  Parent Name |  Occupation | Phone | B.NO | Term Amount");
              System.out.println("If you want add another student you can add then enter one 1(ADD).");
              break;
            case 2 : 
              // TODO
              System.out.println("Your's Choice DELETE");
              if(StudentsInfo.size() > 0) {
                System.out.println("Please enter Student Number to delete= ");
                int del_Sno = inputKey.nextInt();
                deleteStudent(del_Sno);
                System.out.println("Existing Students Info...");
                student1.printstudentsInfoAll();}
              else {
                System.out.println("No Students in the System. Please ADD");}
              break;
            case 3 : 
              System.out.println("Your's Choice MODIFY");
              // TODO
              break;
            case 4 : 
              System.out.println("Your's Choice RETRIVE");
              student1.printstudentsInfoAll();
              break;
            case 5 : 
              System.out.println("Your's Choice EXIT");
              break;
            default : 
              System.out.printf("Your's NOT Selected Any Option");  
          }
        } 
        while(choice < 5);
        inputKey.close();
    System.out.println("************************** Final STUDETNS INFORMATION **************************");
    System.out.println("S.NO  |   Name  |   Section |  Parent Name |  Occupation | Phone | B.NO | Term Amount");
    student1.printstudentsInfoAll();
    System.out.println("****************************END of the program**********************************");
  }
}
